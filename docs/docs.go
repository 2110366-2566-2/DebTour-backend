// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/activities": {
            "get": {
                "description": "Get all activities",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "activities"
                ],
                "summary": "Get all activities",
                "operationId": "GetAllActivities",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Activity"
                            }
                        }
                    }
                }
            }
        },
        "/hello": {
            "get": {
                "description": "Just reply Hello World!",
                "produces": [
                    "application/json"
                ],
                "summary": "Hello World",
                "operationId": "HelloWorld",
                "responses": {
                    "200": {
                        "description": "Hello World!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/joinings": {
            "get": {
                "description": "Get all joinings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "joinings"
                ],
                "summary": "Get all joinings",
                "operationId": "GetAllJoinings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Joining"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Join tour",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "joinings"
                ],
                "summary": "Join tour",
                "operationId": "JoinTour",
                "parameters": [
                    {
                        "description": "Join tour request",
                        "name": "joinTourRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.JoinTourRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Joining"
                        }
                    }
                }
            }
        },
        "/reviews": {
            "get": {
                "description": "Get all reviews",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Get all reviews",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Review"
                            }
                        }
                    }
                }
            }
        },
        "/reviews/tour/{id}": {
            "get": {
                "description": "Get reviews by tour id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Get reviews by tour id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tour ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Review"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a review",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Create a review",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tour ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Review",
                        "name": "review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Review"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete reviews by tour id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Delete reviews by tour id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tour ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/reviews/tourist/{username}": {
            "get": {
                "description": "Get reviews by tourist username",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Get reviews by tourist username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tourist Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Review"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete reviews by tourist username",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Delete reviews by tourist username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tourist Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/reviews/{id}": {
            "get": {
                "description": "Get review by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Get review by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Review ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Review"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a review",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Delete a review",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Review ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/tours": {
            "get": {
                "description": "Get all tours",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tours"
                ],
                "summary": "Get all tours",
                "operationId": "GetAllTours",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Tour"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a tour with the input JSON data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tours"
                ],
                "summary": "Create a tour",
                "operationId": "CreateTour",
                "parameters": [
                    {
                        "description": "Tour",
                        "name": "tour",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TourWithActivitiesWithLocationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TourWithActivitiesWithLocation"
                        }
                    }
                }
            }
        },
        "/tours/activities/{id}": {
            "put": {
                "description": "Update activities by tourId",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tour-activities"
                ],
                "summary": "Update activities by tourId",
                "operationId": "UpdateActivitiesByTourId",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tour ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Activities with location",
                        "name": "activitiesWithLocation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ActivityWithLocation"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create activities for a tour",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tour-activities"
                ],
                "summary": "Create activities for a tour",
                "operationId": "CreateTourActivities",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tour ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Activities with location request",
                        "name": "activitiesWithLocationRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.ActivityWithLocationRequest"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TourWithActivitiesWithLocation"
                        }
                    }
                }
            }
        },
        "/tours/filter": {
            "get": {
                "description": "Filter tours",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tours"
                ],
                "summary": "Filter tours",
                "operationId": "FilterTours",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start date",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Overview location",
                        "name": "overviewLocation",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Member count from",
                        "name": "memberCountFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Member count to",
                        "name": "memberCountTo",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Price from",
                        "name": "priceFrom",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Price to",
                        "name": "priceTo",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Tour"
                            }
                        }
                    }
                }
            }
        },
        "/tours/images/{id}": {
            "get": {
                "description": "Get tour images",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tour-images"
                ],
                "summary": "Get tour images",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tour ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tour images",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TourImagesResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create tour images",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tour-images"
                ],
                "summary": "Create tour images",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tour ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tour images request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TourImagesRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Tour images created successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete tour images",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tour-images"
                ],
                "summary": "Delete tour image",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tour ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tour images deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tours/tourists/{id}": {
            "get": {
                "description": "Get a tourist by tourId",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tours"
                ],
                "summary": "Get a tourist by tourId",
                "operationId": "GetTouristByTourId",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tour ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.JoinedMembers"
                            }
                        }
                    }
                }
            }
        },
        "/tours/{id}": {
            "get": {
                "description": "Get tour by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tours"
                ],
                "summary": "Get tour by id",
                "operationId": "GetTourByID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tour ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TourWithActivitiesWithLocation"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a tour with the input JSON data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tours"
                ],
                "summary": "Update a tour",
                "operationId": "UpdateTour",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tour ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tour",
                        "name": "tour",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Tour"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a tour",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tours"
                ],
                "summary": "Delete a tour",
                "operationId": "DeleteTour",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tour ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "operationId": "GetAllUsers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            }
        },
        "/users/{username}": {
            "get": {
                "description": "Get user by username",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by username",
                "operationId": "GetUserByUsername",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user",
                "operationId": "UpdateUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user",
                "operationId": "DeleteUser",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Activity": {
            "type": "object",
            "properties": {
                "activityId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "endTimestamp": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "startTimestamp": {
                    "type": "string"
                },
                "tourId": {
                    "type": "integer"
                }
            }
        },
        "models.ActivityWithLocation": {
            "type": "object",
            "properties": {
                "activityId": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "endTimestamp": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/models.Location"
                },
                "name": {
                    "type": "string"
                },
                "startTimestamp": {
                    "type": "string"
                },
                "tourId": {
                    "type": "integer"
                }
            }
        },
        "models.ActivityWithLocationRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "endTimestamp": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/models.LocationRequest"
                },
                "name": {
                    "type": "string"
                },
                "startTimestamp": {
                    "type": "string"
                }
            }
        },
        "models.JoinTourRequest": {
            "type": "object",
            "properties": {
                "joinedMembers": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "age": {
                                "type": "integer"
                            },
                            "firstName": {
                                "type": "string"
                            },
                            "lastName": {
                                "type": "string"
                            }
                        }
                    }
                },
                "tourId": {
                    "type": "integer"
                },
                "touristUsername": {
                    "type": "string"
                }
            }
        },
        "models.JoinedMembers": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                }
            }
        },
        "models.Joining": {
            "type": "object",
            "properties": {
                "memberAge": {
                    "type": "integer"
                },
                "memberFirstName": {
                    "type": "string"
                },
                "memberLastName": {
                    "type": "string"
                },
                "tourId": {
                    "type": "integer"
                },
                "touristUsername": {
                    "type": "string"
                }
            }
        },
        "models.Location": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "locationId": {
                    "type": "integer"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.LocationRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.Review": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "ratingScore": {
                    "type": "integer"
                },
                "reviewId": {
                    "type": "integer"
                },
                "tourId": {
                    "type": "integer"
                },
                "touristUsername": {
                    "type": "string"
                }
            }
        },
        "models.ReviewRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "ratingScore": {
                    "type": "integer"
                },
                "touristUsername": {
                    "type": "string"
                }
            }
        },
        "models.Tour": {
            "type": "object",
            "properties": {
                "agencyUsername": {
                    "type": "string"
                },
                "createdTimestamp": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "maxMemberCount": {
                    "type": "integer"
                },
                "memberCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "overviewLocation": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "refundDueDate": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tourId": {
                    "type": "integer"
                }
            }
        },
        "models.TourImagesRequest": {
            "type": "object",
            "properties": {
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.TourImagesResponse": {
            "type": "object",
            "properties": {
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tourId": {
                    "type": "integer"
                }
            }
        },
        "models.TourWithActivitiesWithLocation": {
            "type": "object",
            "properties": {
                "activities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ActivityWithLocation"
                    }
                },
                "agencyUsername": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "maxMemberCount": {
                    "type": "integer"
                },
                "memberCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "overviewLocation": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "refundDueDate": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tourId": {
                    "type": "integer"
                }
            }
        },
        "models.TourWithActivitiesWithLocationRequest": {
            "type": "object",
            "properties": {
                "activities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ActivityWithLocationRequest"
                    }
                },
                "description": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "maxMemberCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "overviewLocation": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "refundDueDate": {
                    "type": "string"
                },
                "startDate": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "createdTime": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
