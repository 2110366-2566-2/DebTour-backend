definitions:
  models.Activity:
    properties:
      activityId:
        type: integer
      description:
        type: string
      endTimestamp:
        type: string
      name:
        type: string
      startTimestamp:
        type: string
      tourId:
        type: integer
    type: object
  models.ActivityWithLocation:
    properties:
      activityId:
        type: integer
      description:
        type: string
      endTimestamp:
        type: string
      location:
        $ref: '#/definitions/models.Location'
      name:
        type: string
      startTimestamp:
        type: string
      tourId:
        type: integer
    type: object
  models.ActivityWithLocationRequest:
    properties:
      description:
        type: string
      endTimestamp:
        type: string
      location:
        $ref: '#/definitions/models.LocationRequest'
      name:
        type: string
      startTimestamp:
        type: string
    type: object
  models.JoinTourRequest:
    properties:
      joinedMembers:
        items:
          properties:
            age:
              type: integer
            firstName:
              type: string
            lastName:
              type: string
          type: object
        type: array
      tourId:
        type: integer
      touristUsername:
        type: string
    type: object
  models.JoinedMembers:
    properties:
      age:
        type: integer
      firstName:
        type: string
      lastName:
        type: string
    type: object
  models.Joining:
    properties:
      memberAge:
        type: integer
      memberFirstName:
        type: string
      memberLastName:
        type: string
      tourId:
        type: integer
      touristUsername:
        type: string
    type: object
  models.Location:
    properties:
      address:
        type: string
      latitude:
        type: number
      locationId:
        type: integer
      longitude:
        type: number
      name:
        type: string
      type:
        type: string
    type: object
  models.LocationRequest:
    properties:
      address:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      name:
        type: string
      type:
        type: string
    type: object
  models.Review:
    properties:
      description:
        type: string
      ratingScore:
        type: integer
      reviewId:
        type: integer
      tourId:
        type: integer
      touristUsername:
        type: string
    type: object
  models.ReviewRequest:
    properties:
      description:
        type: string
      ratingScore:
        type: integer
      touristUsername:
        type: string
    type: object
  models.Tour:
    properties:
      agencyUsername:
        type: string
      createdTimestamp:
        type: string
      description:
        type: string
      endDate:
        type: string
      maxMemberCount:
        type: integer
      memberCount:
        type: integer
      name:
        type: string
      overviewLocation:
        type: string
      price:
        type: number
      refundDueDate:
        type: string
      startDate:
        type: string
      status:
        type: string
      tourId:
        type: integer
    type: object
  models.TourImagesRequest:
    properties:
      images:
        items:
          type: string
        type: array
    type: object
  models.TourImagesResponse:
    properties:
      images:
        items:
          type: string
        type: array
      tourId:
        type: integer
    type: object
  models.TourWithActivitiesWithLocation:
    properties:
      activities:
        items:
          $ref: '#/definitions/models.ActivityWithLocation'
        type: array
      agencyUsername:
        type: string
      description:
        type: string
      endDate:
        type: string
      maxMemberCount:
        type: integer
      memberCount:
        type: integer
      name:
        type: string
      overviewLocation:
        type: string
      price:
        type: number
      refundDueDate:
        type: string
      startDate:
        type: string
      status:
        type: string
      tourId:
        type: integer
    type: object
  models.TourWithActivitiesWithLocationRequest:
    properties:
      activities:
        items:
          $ref: '#/definitions/models.ActivityWithLocationRequest'
        type: array
      description:
        type: string
      endDate:
        type: string
      maxMemberCount:
        type: integer
      name:
        type: string
      overviewLocation:
        type: string
      price:
        type: number
      refundDueDate:
        type: string
      startDate:
        type: string
    type: object
  models.User:
    properties:
      createdTime:
        type: string
      email:
        type: string
      image:
        type: string
      password:
        type: string
      phone:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /activities:
    get:
      description: Get all activities
      operationId: GetAllActivities
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Activity'
            type: array
      summary: Get all activities
      tags:
      - activities
  /hello:
    get:
      description: Just reply Hello World!
      operationId: HelloWorld
      produces:
      - application/json
      responses:
        "200":
          description: Hello World!
          schema:
            type: string
      summary: Hello World
  /joinings:
    get:
      description: Get all joinings
      operationId: GetAllJoinings
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Joining'
            type: array
      summary: Get all joinings
      tags:
      - joinings
    post:
      consumes:
      - application/json
      description: Join tour
      operationId: JoinTour
      parameters:
      - description: Join tour request
        in: body
        name: joinTourRequest
        required: true
        schema:
          $ref: '#/definitions/models.JoinTourRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Joining'
      summary: Join tour
      tags:
      - joinings
  /reviews:
    get:
      description: Get all reviews
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Review'
            type: array
      summary: Get all reviews
      tags:
      - reviews
  /reviews/{id}:
    delete:
      description: Delete a review
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a review
      tags:
      - reviews
    get:
      description: Get review by id
      parameters:
      - description: Review ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Review'
      summary: Get review by id
      tags:
      - reviews
  /reviews/tour/{id}:
    delete:
      description: Delete reviews by tour id
      parameters:
      - description: Tour ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete reviews by tour id
      tags:
      - reviews
    get:
      description: Get reviews by tour id
      parameters:
      - description: Tour ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Review'
            type: array
      summary: Get reviews by tour id
      tags:
      - reviews
    post:
      consumes:
      - application/json
      description: Create a review
      parameters:
      - description: Tour ID
        in: path
        name: id
        required: true
        type: integer
      - description: Review
        in: body
        name: review
        required: true
        schema:
          $ref: '#/definitions/models.ReviewRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Review'
      summary: Create a review
      tags:
      - reviews
  /reviews/tourist/{username}:
    delete:
      description: Delete reviews by tourist username
      parameters:
      - description: Tourist Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete reviews by tourist username
      tags:
      - reviews
    get:
      description: Get reviews by tourist username
      parameters:
      - description: Tourist Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Review'
            type: array
      summary: Get reviews by tourist username
      tags:
      - reviews
  /tours:
    get:
      description: Get all tours
      operationId: GetAllTours
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Tour'
            type: array
      summary: Get all tours
      tags:
      - tours
    post:
      consumes:
      - application/json
      description: Create a tour with the input JSON data
      operationId: CreateTour
      parameters:
      - description: Tour
        in: body
        name: tour
        required: true
        schema:
          $ref: '#/definitions/models.TourWithActivitiesWithLocationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TourWithActivitiesWithLocation'
      summary: Create a tour
      tags:
      - tours
  /tours/{id}:
    delete:
      description: Delete a tour
      operationId: DeleteTour
      parameters:
      - description: Tour ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete a tour
      tags:
      - tours
    get:
      description: Get tour by id
      operationId: GetTourByID
      parameters:
      - description: Tour ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TourWithActivitiesWithLocation'
      summary: Get tour by id
      tags:
      - tours
    put:
      consumes:
      - application/json
      description: Update a tour with the input JSON data
      operationId: UpdateTour
      parameters:
      - description: Tour ID
        in: path
        name: id
        required: true
        type: integer
      - description: Tour
        in: body
        name: tour
        required: true
        schema:
          $ref: '#/definitions/models.Tour'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Update a tour
      tags:
      - tours
  /tours/activities/{id}:
    post:
      consumes:
      - application/json
      description: Create activities for a tour
      operationId: CreateTourActivities
      parameters:
      - description: Tour ID
        in: path
        name: id
        required: true
        type: integer
      - description: Activities with location request
        in: body
        name: activitiesWithLocationRequest
        required: true
        schema:
          items:
            $ref: '#/definitions/models.ActivityWithLocationRequest'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TourWithActivitiesWithLocation'
      summary: Create activities for a tour
      tags:
      - tour-activities
    put:
      consumes:
      - application/json
      description: Update activities by tourId
      operationId: UpdateActivitiesByTourId
      parameters:
      - description: Tour ID
        in: path
        name: id
        required: true
        type: integer
      - description: Activities with location
        in: body
        name: activitiesWithLocation
        required: true
        schema:
          items:
            $ref: '#/definitions/models.ActivityWithLocation'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Update activities by tourId
      tags:
      - tour-activities
  /tours/filter:
    get:
      description: Filter tours
      operationId: FilterTours
      parameters:
      - description: Name
        in: query
        name: name
        type: string
      - description: Start date
        in: query
        name: startDate
        type: string
      - description: End date
        in: query
        name: endDate
        type: string
      - description: Overview location
        in: query
        name: overviewLocation
        type: string
      - description: Member count from
        in: query
        name: memberCountFrom
        type: string
      - description: Member count to
        in: query
        name: memberCountTo
        type: string
      - description: Price from
        in: query
        name: priceFrom
        type: string
      - description: Price to
        in: query
        name: priceTo
        type: string
      - description: Limit
        in: query
        name: limit
        type: string
      - description: Offset
        in: query
        name: offset
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Tour'
            type: array
      summary: Filter tours
      tags:
      - tours
  /tours/images/{id}:
    delete:
      description: Delete tour images
      parameters:
      - description: Tour ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Tour images deleted successfully
          schema:
            type: string
      summary: Delete tour image
      tags:
      - tour-images
    get:
      description: Get tour images
      parameters:
      - description: Tour ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Tour images
          schema:
            items:
              $ref: '#/definitions/models.TourImagesResponse'
            type: array
      summary: Get tour images
      tags:
      - tour-images
    post:
      consumes:
      - application/json
      description: Create tour images
      parameters:
      - description: Tour ID
        in: path
        name: id
        required: true
        type: integer
      - description: Tour images request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.TourImagesRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Tour images created successfully
          schema:
            type: string
      summary: Create tour images
      tags:
      - tour-images
  /tours/tourists/{id}:
    get:
      description: Get a tourist by tourId
      operationId: GetTouristByTourId
      parameters:
      - description: Tour ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.JoinedMembers'
            type: array
      summary: Get a tourist by tourId
      tags:
      - tours
  /users:
    get:
      description: Get all users
      operationId: GetAllUsers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Get all users
      tags:
      - users
  /users/{username}:
    delete:
      description: Delete a user
      operationId: DeleteUser
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User deleted
          schema:
            type: string
      summary: Delete a user
      tags:
      - users
    get:
      description: Get user by username
      operationId: GetUserByUsername
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get user by username
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user
      operationId: UpdateUser
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: User updated
          schema:
            type: string
      summary: Update a user
      tags:
      - users
swagger: "2.0"
